push 0
pop rbp
push 0
pop [99]
#{
#src:
push 100
#Esrc:
pop [rbp + 0]
jmp :function_hell_1*skip
function_hell_1:
#{
#begin of rcb 2
#src:
push 666
#Esrc:
out
#src:
push [99]
pop rax
push [rax + 0]
#Esrc:
out
#src:
push [rbp + 0]
#Esrc:
out
#src:
push [rbp + 1]
#Esrc:
out
eocb_2:
push rax
#}
swap
ret
function_hell_1*skip:
jmp :v-function_ans_3*skip
v-function_ans_3:
#{
#begin of rcb 4
#src:
push 42
#Esrc:
pop rax
jmp :eocb_4
eocb_4:
push rax
#}
swap
ret
v-function_ans_3*skip:
push 13
push 11
push :function_hell_1
pop rax
#call of func
push rbp
push 1 
add
pop rbp
pop [rbp + 1]
pop [rbp + 0]
push [98]
push rbp
pop [98]
call rax
swap
pop [98]
push rbp
push 1 
sub
pop rbp
#end of func call
pop rnn
#}
