push 0
pop rbp
push 0
pop [99]
#{
jmp :function_main_1*skip
function_main_1:
#{
#begin of rcb 2
#src:
push 0
#Esrc:
pop rax
jmp :eocb_2
eocb_2:
push rax
#}
swap
ret
function_main_1*skip:
jmp :function_helloworld_3*skip
function_helloworld_3:
#{
#begin of rcb 4
#src:
push 4
#Esrc:
out
#src:
push 0
#Esrc:
pop rax
jmp :eocb_4
eocb_4:
push rax
#}
swap
ret
function_helloworld_3*skip:
push :function_main_1
pop rax
#save
#call of func
push rbp
push 0 
add
pop rbp
push [98]
push rbp
pop [98]
call rax
swap
pop [98]
push rbp
push 0 
sub
pop rbp
#end of func call
pop rnn
#}
