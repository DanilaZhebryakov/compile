push 0
pop rbp
#{
#src:
push 100
#Esrc:
pop [rbp + 2]
jmp :function_hell_1*skip
function_hell_1:
#{
#begin of rcb 2
#src:
push 666
#Esrc:
out
#src:
push [99]
pop rax
push [rax + 2]
#Esrc:
out
eocb_2:
push rax
#}
swap
ret
function_hell_1*skip:
jmp :v-function_ans_3*skip
v-function_ans_3:
#{
#begin of rcb 4
#src:
push 42
#Esrc:
pop rax
jmp :eocb_4
eocb_4:
push rax
#}
swap
ret
v-function_ans_3*skip:
push :function_hell_1
pop rax
#call of func
push [98]
push rbp
push 2 
add
dup
pop [98]
pop rbp
call rax
swap
pop [98]
push rbp
push 2 
sub
pop rbp
#end of func call
pop rnn
#}
